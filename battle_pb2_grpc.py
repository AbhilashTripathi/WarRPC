# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import battle_pb2 as battle__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class BattleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MissileApproaching = channel.unary_unary(
                '/BattleService/MissileApproaching',
                request_serializer=battle__pb2.MissileNotification.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Status = channel.unary_unary(
                '/BattleService/Status',
                request_serializer=battle__pb2.StatusRequest.SerializeToString,
                response_deserializer=battle__pb2.StatusResponse.FromString,
                )
        self.StatusAll = channel.unary_unary(
                '/BattleService/StatusAll',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=battle__pb2.StatusAllResponse.FromString,
                )
        self.WasHit = channel.unary_unary(
                '/BattleService/WasHit',
                request_serializer=battle__pb2.WasHitRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.TakeShelter = channel.unary_unary(
                '/BattleService/TakeShelter',
                request_serializer=battle__pb2.TakeShelterRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class BattleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def MissileApproaching(self, request, context):
        """Notify the soldiers about an approaching missile.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Status(self, request, context):
        """Query the status of a specific soldier.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatusAll(self, request, context):
        """Query the status of all soldiers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WasHit(self, request, context):
        """Notify a soldier whether they were hit by a missile.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TakeShelter(self, request, context):
        """Request a soldier to take shelter (move to a safe location).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BattleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MissileApproaching': grpc.unary_unary_rpc_method_handler(
                    servicer.MissileApproaching,
                    request_deserializer=battle__pb2.MissileNotification.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Status': grpc.unary_unary_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=battle__pb2.StatusRequest.FromString,
                    response_serializer=battle__pb2.StatusResponse.SerializeToString,
            ),
            'StatusAll': grpc.unary_unary_rpc_method_handler(
                    servicer.StatusAll,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=battle__pb2.StatusAllResponse.SerializeToString,
            ),
            'WasHit': grpc.unary_unary_rpc_method_handler(
                    servicer.WasHit,
                    request_deserializer=battle__pb2.WasHitRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'TakeShelter': grpc.unary_unary_rpc_method_handler(
                    servicer.TakeShelter,
                    request_deserializer=battle__pb2.TakeShelterRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BattleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BattleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def MissileApproaching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattleService/MissileApproaching',
            battle__pb2.MissileNotification.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattleService/Status',
            battle__pb2.StatusRequest.SerializeToString,
            battle__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StatusAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattleService/StatusAll',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            battle__pb2.StatusAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WasHit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattleService/WasHit',
            battle__pb2.WasHitRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TakeShelter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BattleService/TakeShelter',
            battle__pb2.TakeShelterRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
